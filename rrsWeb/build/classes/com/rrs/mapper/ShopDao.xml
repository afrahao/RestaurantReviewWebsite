<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rrs.mapper.ShopDao">


    <delete parameterType="String" id="deleteTrack"> 
		delete from track where user_id=#{0} and business_id = #{1}
	</delete>

	<!-- 插入足迹-->
	<insert parameterType="String" id="insertTrack"> 
		INSERT INTO track (user_id,business_id,visit_time) VALUES(#{0},#{1},now()) 
	</insert>
	
	<!-- 返回指定用户的足迹ID -->	
	<select parameterType="String" id="getTrackBusiness" resultType="String"> 
		select business_id from track where user_id =#{0} order by visit_time desc 
	</select>


	<!-- 返回restaurant数量 -->
    <select id="getRestaurantNum" resultType="Integer">
        select count(*) from business
    </select>
    
	<!-- 返回一些restaurant -->
    <select id="getRestaurant" parameterType="Integer" resultType="com.rrs.pojo.Restaurant">
        select * from business LIMIT #{0},#{1}
    </select>
    
    <select id="getRestaurantByCate" resultType="com.rrs.pojo.Restaurant">
        select * from  business,business_cate
        <where>
            business.id = business_cate.business_id and business_cate.category_id in (4,23,134,49)
        </where>
    </select>
    
    <!-- 根据用户喜好标签返回商家 -->
    <select id="getRestaurantByFavor" resultType="com.rrs.pojo.Restaurant">
        select * from  business,business_cate
        <where>
            business.id = business_cate.business_id and business_cate.category_id in 
            <foreach item="item" index="index" collection="favor" open="(" separator="," close=")">
            	#{item}
         	</foreach>
        </where>
    </select>
    
    <!-- 返回restaurant By key -->
    <select id="getRestaurantSearch" parameterType="String" resultType="com.rrs.pojo.Restaurant">               
        select * from business where business.name like CONCAT('%',#{key},'%')      
    </select>
    
    <select id="getRestaurantSearchNum" parameterType="String" resultType="Integer" >
        select count(*) from business where business.name like CONCAT('%',#{key},'%') 
    </select>
    
     <!-- 返回single By name -->
    <select id="getRestaurantImg" parameterType="String" resultType="String">               
        select photo.id as img from photo where photo.business_id=#{shop_id}
    </select>
    
    <!-- 返回single By id -->
    <select id="getRestaurantById" parameterType="String" resultType="Restaurant">               
        select * from business where business.id = #{0}
    </select>
    
    <!-- 返回某个饭店的所有attribute -->
     <select id="getAttributes" parameterType="String" resultType="com.rrs.pojo.Attribute" >
        select * from attribute where business_id = #{0} 
    </select>
    
    <!-- 返回某个饭店的所有category -->
     <select id="getCategoryList" parameterType="String" resultType="String" >
        select category from category,business_cate where category.id = business_cate.category_id and business_id=#{0}
    </select>
   
   <!-- 返回某个饭店的所有hour -->
     <select id="getHourList" parameterType="String" resultType="String" >
        select hours from hours where business_id=#{0}
    </select>
   
   
       <!-- 返回某个饭店的所有review -->
     <select id="getReviewList" parameterType="String" resultType="com.rrs.pojo.Review" >
        select user.name as user_name,review.*,userful_status,funny_status,cool_status from (review left join user on review.user_id=user.id) left join user_review on review.id = user_review.review_id where business_id=#{0} order by date desc     
    </select>
    
    <!-- 返回距离指定地点指定范围的restaurant -->
    <select id="getRestaurantByDistance1" resultType="com.rrs.pojo.Restaurant">
	    SELECT 
	    *,
	    photo.id as img,
	    ROUND(
	        6378.138 * 2 * ASIN(
	            SQRT(
	                POW(
	                    SIN(
	                        (
	                            #{0} * PI() / 180 - latitude * PI() / 180
	                        ) / 2
	                    ),
	                    2
	                ) + COS(#{0} * PI() / 180) * COS(latitude * PI() / 180) * POW(
	                    SIN(
	                        (
	                            #{1} * PI() / 180 - longitude * PI() / 180
	                        ) / 2
	                    ),
	                    2
	                )
	            )
	        ) * 1000
	    ) AS distance
	FROM
	    business,photo
	where business.id=photo.business_id
	HAVING
		distance &lt;= #{2}
	ORDER BY
	    distance ASC
	LIMIT 1,150
    </select> 
    <!-- 返回距离指定地点指定范围的restaurant -->
    <select id="getRestaurantByDistance2" resultType="com.rrs.pojo.Restaurant">
	    SELECT 
	    *,
	    photo.id as img,
	    ROUND(
	        6378.138 * 2 * ASIN(
	            SQRT(
	                POW(
	                    SIN(
	                        (
	                            #{0} * PI() / 180 - latitude * PI() / 180
	                        ) / 2
	                    ),
	                    2
	                ) + COS(#{0} * PI() / 180) * COS(latitude * PI() / 180) * POW(
	                    SIN(
	                        (
	                            #{1} * PI() / 180 - longitude * PI() / 180
	                        ) / 2
	                    ),
	                    2
	                )
	            )
	        ) * 1000
	    ) AS distance
	FROM
	    business,photo
	where business.id=photo.business_id
	HAVING
		distance &lt;= #{3} and  distance &gt;= #{2}
	ORDER BY
	    distance ASC
	LIMIT 1,150
    </select> 
    <!-- 返回距离指定地点指定范围的restaurant -->
    <select id="getRestaurantByDistance3" resultType="com.rrs.pojo.Restaurant">
	    SELECT 
	    *,
	    photo.id as img,
	    ROUND(
	        6378.138 * 2 * ASIN(
	            SQRT(
	                POW(
	                    SIN(
	                        (
	                            #{0} * PI() / 180 - latitude * PI() / 180
	                        ) / 2
	                    ),
	                    2
	                ) + COS(#{0} * PI() / 180) * COS(latitude * PI() / 180) * POW(
	                    SIN(
	                        (
	                            #{1} * PI() / 180 - longitude * PI() / 180
	                        ) / 2
	                    ),
	                    2
	                )
	            )
	        ) * 1000
	    ) AS distance
	FROM
	    business,photo
	where business.id=photo.business_id
	HAVING
		distance &gt;= #{2}
	ORDER BY
	    distance ASC
	LIMIT 1,150
    </select> 
    
    
    <!-- 插入评论-->
	<insert id="insertReview"> 
		INSERT INTO review (id,business_id,user_id,stars,date,text) VALUES(#{0},#{1},#{2},#{3},now(),#{4}) 
	</insert>
    
       
     <!-- 更新用户点赞与取消赞的表-->
	<update id="updateUserReview"> 
		update user_review set cool_status=(case when #{2}='cool_status' then #{3} else cool_status end)
        ,funny_status=(case when #{2}='funny_status' then #{3} else funny_status end)
        ,useful_status=(case when #{2}='useful_status' then #{3} else useful_status end)
		where review_id = #{1} and user_id = #{0}; 
	</update>

    <!-- 用户点赞与取消赞的插入-->
	<insert id="insertUserReview"> 
		INSERT INTO user_review (user_id,id,#{2}) VALUES(#{0},#{1},#{3}) 
	</insert>
	
	
      <!-- 点赞或取消赞-->
	<update id="updateReview"> 
	update review set cool=(case when #{1}='cool' then cool+(#{2}) else cool end)
    ,funny=(case when #{1}='funny' then funny+(#{2}) else funny end)
    ,useful=(case when #{1}='useful' then useful+(#{2}) else useful end)
	where id = #{0}; 
	</update>
	
    

</mapper>